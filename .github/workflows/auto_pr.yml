name: Perform a code review when a pull request is created.
on:
  pull_request:
    types: [opened, synchronized, reopened]

jobs:
  codex:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      final_message: ${{ steps.run_codex.outputs.final-message }}
    steps:
      - name: Checkout PR merge ref with full history
        uses: actions/checkout@v5
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge
          fetch-depth: 0

      - name: Ensure base/head refs are present
        run: |
          git fetch --no-tags origin \
            ${{ github.event.pull_request.base.ref }} \
            +refs/pull/${{ github.event.pull_request.number }}/head

      - name: Prepare PR context for Codex (no git inside sandbox)
        id: prep
        run: |
          BASE="${{ github.event.pull_request.base.sha }}"
          HEAD="${{ github.event.pull_request.head.sha }}"

          # Helpful when running in GitHubâ€™s container
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

          echo "FILES<<EOF" >> "$GITHUB_OUTPUT"
          git diff --name-status "$BASE..$HEAD"
          echo "EOF" >> "$GITHUB_OUTPUT"

          echo "COMMITS<<EOF" >> "$GITHUB_OUTPUT"
          git log --oneline "$BASE..$HEAD"
          echo "EOF" >> "$GITHUB_OUTPUT"

          # Unified=0: only changed lines; truncate to keep prompt manageable
          echo "DIFF<<'EOF'" >> "$GITHUB_OUTPUT"
          git diff --unified=0 "$BASE..$HEAD" | head -n 4000
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Run Codex
        id: run_codex
        uses: openai/codex-action@v1
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          # model: gpt-4o-mini
          prompt: |
            This is PR #${{ github.event.pull_request.number }} for ${{ github.repository }}.
            Base SHA: ${{ github.event.pull_request.base.sha }}
            Head SHA: ${{ github.event.pull_request.head.sha }}

            Review ONLY the changes introduced by this PR.
            Focus on correctness, potential bugs, edge cases, clarity, and testability.
            Be concise and specific. If the diff is truncated, say what else you'd want to inspect.

            Pull request title and body:
            ----
            ${{ github.event.pull_request.title }}
            ${{ github.event.pull_request.body }}

            Files changed (name-status):
            ----
            ${{ steps.prep.outputs.FILES }}

            Commits in PR:
            ----
            ${{ steps.prep.outputs.COMMITS }}

            Unified diff (truncated to first ~4000 lines):
            ----
            ${{ steps.prep.outputs.DIFF }}

  post_feedback:
    runs-on: ubuntu-latest
    needs: codex
    if: needs.codex.outputs.final_message != ''
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Report Codex feedback
        uses: actions/github-script@v7
        env:
          CODEX_FINAL_MESSAGE: ${{ needs.codex.outputs.final_message }}
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: process.env.CODEX_FINAL_MESSAGE,
            });
